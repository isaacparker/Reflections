How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It found differences in file and thus found the change that caused the page to break.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    You could reintroduce experimental code you used in the beginning of a project. You can be more confident with making changes to a project


What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros you are more conscious of changes to your file. Cons you may forget to save.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Git is for coding and development which needs multiple dependent files.

How can you use the commands git log and git diff to view the history of files?

    Git log shows a list of commits and git diff with two commit numbers pasted after will find the changes in the commit. Red being deletions and green boing additions

How might using version control make you more confident to make changes that
could break something?

    You can checkout earlier commits and test without messing up the head commit. You can also edit that checked out commit or start a new branch from it.

Now that you have your workspace set up, what do you want to try using Git for?

    Developing projects and experimenting with code without worrying about messing something up.



